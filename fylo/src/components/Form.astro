---
const { alternative, formBtn, placeholder, widthInput, textBtn } = Astro.props
const justifyContentContainer = alternative ? "center" : "flex-start"
const widthInputMd = alternative ? "auto" : "100% !important"
---

<form id={formBtn} action="POST" class="form-container">
  {
    !alternative && (
      <input class="input" type="email" name="email" id="email" placeholder={placeholder} />
    )
  }
  <button class={`button ${alternative ? "alternative" : ""}`} form={formBtn} type="submit"
    >{textBtn}</button
  >
</form>

<style define:vars={{ widthInput: widthInput ?? "auto", justifyContentContainer, widthInputMd }}>
  .form-container {
    display: flex;
    justify-content: var(--justifyContentContainer);
    align-items: center;
    flex-wrap: wrap;
    gap: 2rem;
  }

  .input {
    width: var(--widthInput);
    padding: 1.5rem 2rem;
  }

  .input::placeholder {
    color: var(--light-gray);
  }

  .button {
    cursor: pointer;
    color: var(--white);
    background-color: var(--bright-blue);
    padding: 1.5rem 5rem;
  }

  .button:hover {
    opacity: 0.5;
  }

  .alternative {
    background: linear-gradient(to right, var(--cyan), var(--blue));
    border-radius: 3rem;
  }

  @media (width <= 670px) {
    .form-container {
      width: 100%;
      flex-direction: column;
    }

    .input,
    .button {
      width: var(--widthInputMd);
    }
  }
</style>
